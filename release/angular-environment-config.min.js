/**
 * Environment configuration module for AngularJS
 * @version v1.0.0-rc.2
 * @link https://github.com/luminous-patterns/angular-environment-config
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
!function(a,b,c){"use strict";function d(a){return{to:function(b){var c=Object.keys(a);c.forEach(function(c){Object.defineProperty(b,c,{value:a[c],writable:!1,enumerable:!0,configurable:!1})})}}}function e(a){a=a||{};var b=a.code||j,c=a.hostname||"";this.message=a.message||"Environment lookup failed: "+b,this.code=b,this.hostname=c}function f(a){a=a||{};var b=a.environmentName||"";this.message='Environment "'+b+'" already exists',this.code=m,this.environmentName=b}function g(a){a=a||{};var b=a.environmentName||"";this.message='No config for environment name "'+b+'"',this.code=l,this.environmentName=b}function h(){function a(a){d(a).to(this)}return a}function i(){function a(a){for(var b,c,d=(a.toLowerCase(),0);d<n.length;d++)if(c=n[d],null!==a.match(c.regExp)){b=c.environmentName;break}if(!b)throw new e({code:k,message:"No match found for hostname "+a,hostname:a});return b}function h(a){return a in p}function i(a){if(!h(a))throw new g({environmentName:a});return b.extend(j(),p[a])}function j(){return b.copy(o)}function l(a){if("string"==typeof a)return new RegExp("^"+a+"$","i");if(a instanceof RegExp)return a.ignoreCase||(a=new RegExp(a.source,"i")),a;throw new TypeError("A hostname MUST be a string OR an instance of RegExp")}var m,n=[],o={},p={};this.addEnvironment=function(a,b,c){if(h(a))throw new f({environmentName:a});return Array.isArray(b)||(b=[b]),p[a]=c,b.forEach(function(b){this.useConfigFor(a).whenHostnameMatches(b)},this),this},this.useConfigFor=function(a){return{whenHostnameMatches:function(b){var c=l(b);n.unshift({regExp:c,environmentName:a})}}},this.unsetDefaultEnvironmentName=function(){return m=c,this},this.defaultEnvironmentName=function(a){if("string"!=typeof a)throw new TypeError("Default environment name must be a string");return m=a,this},this.setDefault=function(a,b){return o[a]=b,this},this.setDefaults=function(a){var b=Object.keys(a);return b.forEach(function(b){this.setDefault(b,a[b])},this),this},this.$get=["AppEnvironmentConfig","$location",function(b,f){function g(f){var g;try{g=a(f)}catch(h){var j;if(h instanceof e&&k===h.code&&c!==m&&(j=!0,g=m),!0!==j)throw h}var l=g===m,n=new b(i(g)),o={environmentName:g,isDefault:l,hostname:f,config:n};d(o).to(this)}return g.prototype.is=function(a){return this.environmentName===a},new g(f.host())}]}var j="ERR_UNKNOWN",k="ERR_NO_MATCH_FOUND",l="ERR_NO_SUCH_ENVIRONMENT",m="ERR_ENVIRONMENT_ALREADY_EXISTS";e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,f.prototype=Object.create(Error.prototype),f.prototype.constructor=f,g.prototype=Object.create(Error.prototype),g.prototype.constructor=g,b.module("luminous.environment",[]),h.$inject=[],b.module("luminous.environment").factory("AppEnvironmentConfig",h),i.$inject=[],b.module("luminous.environment").provider("$appEnvironment",i)}(window,window.angular);