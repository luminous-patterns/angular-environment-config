/**
 * Environment configuration module for AngularJS
 * @version v1.0.0-rc.1
 * @link https://github.com/luminous-patterns/angular-environment-config
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */!function(a,b,c){"use strict";function d(a){return{to:function(b){var c=Object.keys(a);c.forEach(function(c){Object.defineProperty(b,c,{value:a[c],writable:!1,enumerable:!0,configurable:!1})})}}}function e(a){a=a||{};var b=a.code||j,c=a.hostname||"",d=a.message||"Environment lookup failed: "+b;Error.call(this,d),this.code=b,this.hostname=c}function f(a){a=a||{};var b=a.environmentName||"",c='Environment "'+b+'" already exists';Error.call(this,c),this.code=ERR_ENVIRONMENT_ALREADY_EXISTS,this.environmentName=b}function g(a){a=a||{};var b=a.environmentName||"",c='No config for environment name "'+b+'"';Error.call(this,c),this.code=l,this.environmentName=b}function h(){function a(a){d(a).to(this)}return a}function i(){function h(a){for(var b,c,d=(a.toLowerCase(),0);d<p.length;d++)if(c=p[d],null!==a.match(c.regExp)){b=c.environmentName;break}if(!b)throw new e({code:k,message:"No match found for hostname "+a,hostname:a});return b}function i(a){return a in r}function j(a){if(!i(a))throw new g({environmentName:a});return b.extend(l(),r[a])}function l(){return b.copy(q)}function m(a){if("string"==typeof a)return new RegExp("^"+a+"$","i");if(a instanceof RegExp)return a.ignoreCase||(a=new RegExp(a.source,"i")),a;throw new TypeError("1st argument must be a string OR an instance of RegExp")}function n(){var b=a.location.hostname;if("string"!=typeof b)throw new TypeError("Unexpected (non-string) value for window.location.hostname");return b}var o,p=[],q={},r={};this.addEnvironment=function(a,b,c){if(i(a))throw new f({environmentName:a});return Array.isArray(b)||(b=[b]),r[a]=c,b.forEach(function(b){var c=m(b);this.useConfigFor(a).whenHostnameMatches(c)},this),this},this.useConfigFor=function(a){return{whenHostnameMatches:function(b){p.unshift({regExp:b,environmentName:a})}}},this.defaultEnvironmentName=function(a){if("string"!=typeof a)throw new TypeError("1st argument must be a string");return o=a,this},this.setDefault=function(a,b){return q[a]=b,this},this.setDefaults=function(a){var b=Object.keys(a);return b.forEach(function(b){this.setDefault(b,a[b])},this),this},this.$get=["AppEnvironmentConfig",function(a){function b(b){var f;try{f=h(b)}catch(g){var i;if(g instanceof e&&k===g.code&&c!==o&&(i=!0,f=o),!0!==i)throw g}var l=f===o,m=new a(j(f)),n={environmentName:f,isDefault:l,hostname:b,config:m};d(n).to(this)}return b.prototype.is=function(a){return this.environmentName===a},new b(n())}]}var j="ERR_UNKNOWN",k="ERR_NO_MATCH_FOUND",l="ERR_NO_SUCH_ENVIRONMENT";e.prototype=Object.create(Error.prototype),e.prototype.constructor=e,f.prototype=Object.create(Error.prototype),f.prototype.constructor=f,g.prototype=Object.create(Error.prototype),g.prototype.constructor=g,b.module("luminous.environment",[]),h.$inject=[],b.module("luminous.environment").factory("AppEnvironmentConfig",h),i.$inject=[],b.module("luminous.environment").provider("appEnvironment",i)}(window,window.angular);